source()
source
source = read.csv('Sand_Data.csv')
setwd("~/MachineLearning/Simple Linear Regression/SandGranuleVsBeachSlope")
source = read.csv('Sand_Data.csv')
install.packages('caTools')
library('caTools')
split = sample.split(source$Slope.of.Beach, SplitRatio = 0.23)
trainingSet = subset(source, split == FALSE )
testSet = subset(source, split == TRUE )
trainingSet[,1] = scale(trainingSet[,1])
testSet[,1] = scale(testSet[,1])
model = lm(formula = source$Slope.of.Beach ~ source$Diameter, data = trainingSet )
prediction = predict(model, newdata = testSet)
testSet
source
trainingSet
testSet
prediction = predict(model, newdata = testSet[,-1])
prediction = predict(model, newdata = testSet)
library('ggplot2')
ggplot()+
ggplot.point(aes(x=trainingSet$Diameter, y = trainingSet$Slope.of.Beach), colour ='blue') +
ggplot.line(aes(x=trainingSet$Diameter, predict(model, newdata = trainingSet)), colour='green')+
ggtitle('Sand granule based on beach slope')+
xlab('Granule size')+
ylab('Beach slope')
ggplot()+
geom_point(aes(x=trainingSet$Diameter, y = trainingSet$Slope.of.Beach), colour ='blue') +
geom_line(aes(x=trainingSet$Diameter, predict(model, newdata = trainingSet)), colour='green')+
ggtitle('Sand granule based on beach slope')+
xlab('Granule size')+
ylab('Beach slope')
source = read.csv('Sand_Data.csv')
#Split data
install.packages('caTools')
library('caTools')
split = sample.split(source$Slope.of.Beach, SplitRatio = 0.23)
trainingSet = subset(source, split == FALSE )
testSet = subset(source, split == TRUE )
install.packages("caTools")
source = read.csv('Sand_Data.csv')
#Split data
#install.packages('caTools')
library('caTools')
split = sample.split(source$Slope.of.Beach, SplitRatio = 0.23)
trainingSet = subset(source, split == FALSE )
testSet = subset(source, split == TRUE )
trainingSet[,1] = scale(trainingSet[,1])
testSet[,1] = scale(testSet[,1])
model = lm(formula = source$Slope.of.Beach ~ source$Diameter, data = trainingSet )
prediction = predict(model, newdata = testSet)
model
model = lm(formula = Slope.of.Beach ~ Diameter, data = trainingSet )
rediction = predict(model, newdata = testSet)
prediction = predict(model, newdata = testSet)
ggplot()+
geom_point(aes(x=trainingSet$Diameter, y = trainingSet$Slope.of.Beach), colour ='blue') +
geom_line(aes(x=trainingSet$Diameter, predict(model, newdata = trainingSet)), colour='green')+
ggtitle('Sand granule based on beach slope')+
xlab('Granule size')+
ylab('Beach slope')
setwd("~/MachineLearning/Simple Linear Regression/Auto Insurance in Sweden")
source = read.csv('Auto_Insurance.csv')
source = read.csv('Auto_Insurance.csv')
library(readr)
Auto_Insurance <- read_csv("Auto_Insurance.csv")
View(Auto_Insurance)
source = read.csv('Auto Insurance.xlsv')
source = read.csv('Auto_Insurance.csv')
setwd("~/MachineLearning/Simple Linear Regression/Auto Insurance in Sweden")
source = read.csv('Auto_Insurance.csv')
source = read.csv('Auto_Insurance.csv')
setwd("~/MachineLearning/Simple Linear Regression/Auto Insurance in Sweden")
source = read.csv('Auto_Insurance.csv')
source = read.csv('Auto-Insurance.csv')
library('caTools')
split = sample.split(source$Total.cost.in.Swedish.Kronor..thousnads., SplitRatio = 0.23)
trainingSet = subset(source, split == FALSE )
testSet = subset(source, split == TRUE )
trainingSet[,1] = scale(trainingSet[,1])
testSet[,1] = scale(testSet[,1])
#Linear Regression=
model = lm(formula = Total.cost.in.Swedish.Kronor..thousnads. ~ No..of.Claims, data = trainingSet )
#Prediction
prediction = predict(model, newdata = testSet)
library('ggplot2')
ggplot()+
geom_point(aes(x=trainingSet$No..of.Claims, y = trainingSet$Total.cost.in.Swedish.Kronor..thousnads.), colour ='blue') +
geom_line(aes(x=trainingSet$No..of.Claims, predict(model, newdata = trainingSet)), colour='green')+
ggtitle('Sand granule based on beach slope')+
xlab('Granule size')+
ylab('Beach slope')
